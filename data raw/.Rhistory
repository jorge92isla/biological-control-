knitr::opts_chunk$set(echo = TRUE)
# Compute a histogram of `crop_size`
require(ggplot2)
ggplot(data=cs, aes(crop_size)) +
geom_histogram()
install.packages("ggplot2")
# ----------------------------------------------------------------------------
cs <-read.table("../data/crop_size.csv", header=TRUE, sep=";",
dec=".", na.strings=".", comment.char = "#")
str(cs)
# Compute a histogram of `crop_size`
require(ggplot2)
ggplot(data=cs, aes(crop_size)) +
geom_histogram()
ggplot(cs, aes(crop_size, fill = area)) + geom_histogram(alpha = 0.4)
require(ggplot2)
ggplot(cs, aes(x= d1, y= crop_size)) +
scale_x_log10() + scale_y_log10() +
geom_point(shape= 19) +  # Use filled circles
geom_smooth()            # Add a loess smoothed fit curve with confidence region
ggplot(cs, aes(x = d1, y = crop_size, colour = area, shape = area)) +
scale_x_log10() + scale_y_log10() +
geom_point(size=2) + geom_smooth(method = "lm", fill = NA)
knitr::opts_chunk$set(echo = TRUE)
# ----------------------------------------------------------------------------
cs <-read.table("../data/crop_size.csv", header=TRUE, sep=";",
dec=".", na.strings="NA", comment.char = "#")
str(cs)
# Compute a histogram of `crop_size`
require(ggplot2)
ggplot(data=cs, aes(crop_size)) +
geom_histogram()
ggplot(cs, aes(crop_size, fill = area)) + geom_histogram(alpha = 0.4)
require(ggplot2)
ggplot(cs, aes(x= d1, y= crop_size)) +
scale_x_log10() + scale_y_log10() +
geom_point(shape= 19) +  # Use filled circles
geom_smooth()            # Add a loess smoothed fit curve with confidence region
ggplot(cs, aes(x = d1, y = crop_size, color = area, shape = area)) +
scale_x_log10() + scale_y_log10() +
geom_point(size= 2) + geom_smooth(method = "lm", fill = NA)
View(cs)
install.packages("ggplot2",dep=T)
install.packages("ggplot2", dep = T)
geted()
getwd()
setwd("~/GitHub/biological control in olive groves")
getwd()
read.csv(WINTER_R_DATA)
getwd()
setwd("~/GitHub/biological control in olive groves/data raw")
read.csv(WINTER_R_DATA)
read.csv(bractocera_intensity.csv)
knitr::opts_chunk$set(echo = TRUE)
# ----------------------------------------------------------------------------
cs <-read.table("../data/crop_size.csv", header=TRUE, sep=";",
dec=".", na.strings="NA", comment.char = "#")
str(cs)
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".", na.strings="NA", comment.char = "#")
View(bi)
str(bi)
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".", comment.char = "#")
str(bi)
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA", comment.char = "#")
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA", comment.char = "#")
str(bi)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA", comment.char = "#")
str(bi)
str(bi)
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA")
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA")
str(bi)
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA",comment.char = "#")
str(bi)
bi <-read.csv("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA",comment.char = "#")
str(bi)
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA",comment.char = "#")
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA",comment.char = "#")
str(bi)
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=",", dec=".",na.strings="NA",comment.char = "#")
str(bi)
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA",comment.char = "#")
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA",comment.char = "#")
str(bi)
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA",comment.char = "#")
str(bi)
# Compute a histogram of `removal`
require(ggplot2)
ggplot(data=bi, aes(removal)) + geom_histogram()
ggplot(bi, aes(removal, fill = finca)) + geom_histogram(alpha = 0.4)
ggplot(data=bi, aes(removal/max)) + geom_histogram()
ggplot(bi, aes(removal/max, fill = finca)) + geom_histogram(alpha = 0.4)
ggplot(bi, aes(removal/max, fill = finca)) + geom_histogram(alpha = 0.8)
ggplot(bi, aes(removal/max, fill = habitat)) + geom_histogram(alpha = 0.8)
ggplot(bi, aes(removal/max, fill = finca~habitat)) + geom_histogram(alpha = 0.8)
ggplot(bi, aes(removal/max, fill = finca)) + geom_histogram(alpha = 0.1)
ggplot(bi, aes(removal/max, fill = finca)) + geom_histogram(alpha = 0.4)
ggplot(bi, aes(removal/max, fill = finca)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = habitat)) + geom_histogram(alpha = 0.5)
# Compute a histogram of `removal`
require(ggplot2)
ggplot(data=bi, aes(removal/max)) + geom_histogram()
ggplot(bi, aes(removal/max, fill = finca)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = habitat)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = landscape)) + geom_histogram(alpha = 0.5)
# Compute a histogram of `removal`
require(ggplot2)
ggplot(data=bi, aes(removal/max)) + geom_histogram()
ggplot(bi, aes(removal/max, fill = finca)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = habitat)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = landscape)) + geom_histogram(alpha = 0.5)
require(lme4)
ggplot(bi, aes(removal/max, fill = time)) + geom_histogram(alpha = 0.5)
# Compute a histogram of `removal`
require(ggplot2)
ggplot(data=bi, aes(removal/max)) + geom_histogram()
ggplot(bi, aes(removal/max, fill = finca)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = habitat)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = landscape)) + geom_histogram(alpha = 0.5)
model1 <- glmer(removal/max ~ habitat+landscape+time+habitat*landscape+habitat*time+landscape*time+(1|finca),data=bi, family = binomial(link="logit"))
model1 <- glmer(removal/max ~ habitat+landscape+time+habitat*landscape+habitat*time+landscape*time+(1|finca),data=bi, family = binomial(link="logit"))
a<-lm(removal/max~landscape, data= bi)
anova(lm)
library("car", lib.loc="~/R/win-library/3.4")
anova(lm)
summary(lm)
summary(a)
model1 <- glmer(removal/max ~ habitat+landscape+time+habitat*landscape+habitat*time+landscape*time+(1|finca),data=bi, family = binomial(link="logit"))
glmer(removal/max ~ habitat+landscape+time+habitat*landscape+habitat*time+landscape*time+(1|finca),data=bi, family = binomial(link="logit"))
glmer(removal/max ~ habitat+landscape+time+habitat*landscape+habitat*time+landscape*time+(1|finca),data=bi,family=binomial(link="logit"))
glmer(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=bi,family=binomial(link="logit"))
View(a)
model1<-glmer(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=bi,family=binomial(link="logit"))
summary(model1)
require(car)
anova(model1)
model1<-glmer(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=na.omit(bi),family=binomial(link="logit"))
summary(model1)
anova(model1)
Anova(model1)
model1<-glmer(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=bi,family=binomial(link="logit"))
summary(model1)
Anova(model1)
summary(model1)
model1<-glmer(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=bi,family=binomial(link="logit"))
model1<-glm(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=bi,family=binomial(link="logit"))
model1<-glmer(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=bi,family=binomial(link="logit"))
Anova(model1)
#
bi <-read.table("../data/bractocera_intensity.csv", header=TRUE, sep=";", dec=".",na.strings="NA",comment.char = "#")
str(bi)
# Compute a histogram of `removal`
require(ggplot2)
ggplot(data=bi, aes(removal/max)) + geom_histogram()
ggplot(bi, aes(removal/max, fill = finca)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = habitat)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = landscape)) + geom_histogram(alpha = 0.5)
require(lme4)
require(car)
model1<-glmer(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=bi,family=binomial(link="logit"))
View(a)
Anova(model1)
# Compute a histogram of `removal`
require(ggplot2)
ggplot(data=bi, aes(removal/max)) + geom_histogram()
ggplot(bi, aes(removal/max, fill = finca)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = habitat)) + geom_histogram(alpha = 0.5)
ggplot(bi, aes(removal/max, fill = landscape)) + geom_histogram(alpha = 0.5)
require(lme4)
require(car)
model1<-glmer(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=bi,family=binomial(link="logit"))
Anova(model1)
require(lme4)
require(car)
model1<-glmer(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=bi,family=binomial(link="logit"))
Anova(model1)
plot(model1)
require(lme4)
require(car)
model1<-glmer(removal/max ~ habitat+landscape+time+habitat*landscape+(1|finca),data=bi,family=binomial(link="logit"))
Anova(model1)
install.packages("blmeco")
library("blmeco", lib.loc="~/R/win-library/3.4")
require(blmeco)
lsmeans(model1, landscape)
??lsmeans
library("emmeans", lib.loc="~/R/win-library/3.4")
require(emmeans)
lsmeans(model1, landscape)
lsmeans(model1,"landscape")
lsmeans(model1,"landscape", type = response)
)
lsmeans(model1,"landscape", type = "response")
require(blmeco)
a<-cld(leastsquare, alpha = 0.05, Letters = letters, adjust = "tukey")
lsmeans(model1,"landscape", type = "response")
a<-cld(leastsquare, alpha = 0.05, Letters = letters, adjust = "tukey")
leastsquare = lsmeans(model1,"landscape")
a<-cld(leastsquare, alpha = 0.05, Letters = letters, adjust = "tukey")
a
a<-cld(leastsquare, alpha = 0.06, Letters = letters, adjust = "tukey")
a
leastsquare = lsmeans(model1,"landscape")
a<-cld(leastsquare, alpha = 0.07, Letters = letters, adjust = "tukey")
a
leastsquare = lsmeans(model1,"landscape", type = response)
leastsquare = lsmeans(model1,"landscape", type = "response")
a<-cld(leastsquare, alpha = 0.07, Letters = letters, adjust = "tukey")
a
a
plot(a)
a<-lsmeans(model1, "landscape")
a
a<-lsmeans(model1, "landscape", type = "response")
a
leastsquare = lsmeans(model1,pairwise ~ landscape, adjust="tukey",type="response")
a<-cld(leastsquare, alpha=0.05, Letters=letters,adjust="tukey")
??cld
library("multcomp", lib.loc="~/R/win-library/3.4")
a<-cld(leastsquare, alpha=0.05, Letters=letters,adjust="tukey")
a<-cld(leastsquare, alpha=0.05, Letters=letters,adjust="tukey")
leastsquare = lsmeans(model1,pairwise ~ landscape, adjust="tukey",type="response")
leastsquare
leastsquare = lsmeans(model1,pairwise ~ landscape, adjust="tukey",type="response", alpha =0.05, Letters = letters)
leastsquare
plot(leastsquare)
leastsquare = lsmeans(model1, pairwise ~ landscape, adjust="tukey",type="response", alpha =0.05, Letters = letters)
leastsquare
